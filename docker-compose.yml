version: "3.8"

services:
  db:
    image: postgres:16
    container_name: cinema_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: cinema
      TZ: America/Sao_Paulo
    ports:
      - "5434:5432"
    volumes:
      - cinema_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cinema_net  # Adicionado: Conecta o DB à rede compartilhada (opcional, mas bom para consistência)

  backend:
    build: .
    container_name: cinema_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/cinema
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_FLYWAY_ENABLED: "true"
      JWT_SECRET: 3nG8xZaQrY7cW2fA7qbq6zTyZ8bC3dA2wS7gN1mK9jF0hL4tUoP6iBvE3nG8xZaQ
      AUTH_SERVICE_URL: http://auth-cinema:8080  # Ajustado para usar nome do container do auth (porta interna 8080)
    ports:
      - "8080:8080"  # Mantido como recomendado (acesso via localhost:8080)
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cinema_net  # Adicionado: Conecta o backend à rede compartilhada

volumes:
  cinema_db_data:

networks:
  cinema_net:
    external: true  # Adicionado: Declara a rede como externa (criada manualmente)
